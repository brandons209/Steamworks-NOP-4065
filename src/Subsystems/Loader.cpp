// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "CANTalon.h"


#include "Loader.h"
#include "../RobotMap.h"
#include "../Commands/BlenderForward.h"
#include "../Commands/BlenderReverse.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Loader::Loader() : Subsystem("Loader") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    limitWheel = RobotMap::loaderLimitWheel;
    loaderMotor = RobotMap::loaderloaderMotor;
    i = 0;
    blenderF.reset(new BlenderForward());
    blenderR.reset(new BlenderReverse());
    lastCommand = false;
}

void Loader::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Loader::blenderForward(){
	loaderMotor->Set(0.6);
}

void Loader::blenderReverse(){
	loaderMotor->Set(-0.6);
}

void Loader::loadItDude(){
	if(i < 50){//wait for a second
		i++;
	}else{
		limitWheel->Set(0.55);
		if(!lastCommand){
			if(blenderR.get()->IsRunning()){
				blenderR.get()->Cancel();
			}
			blenderF.get()->Start();
		}else{
			if(blenderF.get()->IsRunning()){
				blenderF.get()->Cancel();
			}
			blenderR.get()->Start();
		}
	}
}

void Loader::stop(){
	blenderF.get()->Cancel();
	blenderR.get()->Cancel();
	limitWheel->Set(0);
	loaderMotor->Set(0);
}
