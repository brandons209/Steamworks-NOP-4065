// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/DriveForward.h"
#include "Commands/DriveToPosition.h"
#include "Commands/Launch.h"
#include "Commands/Load.h"
#include "Commands/Rotate.h"
#include "Commands/TankDrive.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "Commands/CompleteLaunch.h"

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    joystick.reset(new Joystick(0));
    
    loadItFam.reset(new JoystickButton(joystick.get(), 6));
    loadItFam->WhileHeld(new Load());
    launchFam.reset(new JoystickButton(joystick.get(), 5));
    launchFam->WhileHeld(new CompleteLaunch());

    // SmartDashboard Buttons
    SmartDashboard::PutData("Load", new Load());
    SmartDashboard::PutData("Launch", new Launch());
    SmartDashboard::PutData("DriveForward", new DriveForward());
    SmartDashboard::PutData("Rotate", new Rotate());
    SmartDashboard::PutData("TankDrive", new TankDrive());
    SmartDashboard::PutData("DriveToPosition", new DriveToPosition());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getJoystick() {
   return joystick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
